#这些配置实际上是给配置类注入数据，比如thymeleaf的就是ThymeleafAutoConfiguration


# ServerProperties
#设置访问端口
server.port=8080
#设置项目的访问路径
server.servlet.context-path=/community


# ThymeleafProperties
#将thymeleaf缓存关闭
spring.thymeleaf.cache=false

# DataSourceProperties
# 配置MySQL数据和连接池
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# MySQL连接路径
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=wudong
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
# 配置Mybatis
mybatis.mapper-locations=classpath:mapper/*.xml
# 指定实体类封装表的数据，这是声明实体类的包名
mybatis.type-aliases-package=com.nowcoder.community.entity
mybatis.configuration.useGeneratedKeys=true
# 这个配置的意思是将比如header_url（表的字段）和headerUrl（类的属性）的命名方式匹配起来
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
#logging.level.com.nowcoder.community = debug
#logging.file.name=d:/workspace/data/nowcoder/community.log

# MailProperties
spring.mail.host=smtp.139.com
spring.mail.port=465
spring.mail.username=13480810656@139.com
spring.mail.password=Aa19960626asd
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

# community
community.path.domain=http://localhost:8080
community.path.upload=D:/workspace/data/upload

# RedisProperties
# 有16个库，自己选一个
spring.redis.database=11
# 选择的库IP
spring.redis.host=localhost
spring.redis.port=6379

# KafkaProperties
# 消息发送服务器
spring.kafka.bootstrap-servers=localhost:9092
# 消费者分组ID
spring.kafka.consumer.group-id=community-consumer-group
# 是否自动提交消费者的偏移量给Kafka，消费者在读完以后需不需要记录并提交
spring.kafka.consumer.enable-auto-commit=true
# 自动提交频率，3秒
spring.kafka.consumer.auto-commit-interval=3000


